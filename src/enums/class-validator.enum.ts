/* eslint-disable @typescript-eslint/naming-convention */
import { registerEnumType } from '@nestjs/graphql';

export enum ClassValidatorEnum {
  /* CLASS VALIDATORS */
  ARRAY_CONTAIN = 'ARRAY_CONTAIN',
  ARRAY_MAX_SIZE = 'ARRAY_MAX_SIZE',
  ARRAY_MIN_SIZE = 'ARRAY_MIN_SIZE',
  ARRAY_NOT_CONTAINS = 'ARRAY_NOT_CONTAINS',
  ARRAY_NOT_EMPTY = 'ARRAY_NOT_EMPTY',
  ARRAY_UNIQUE = 'ARRAY_UNIQUE',
  SHOULD_ALLOW = 'SHOULD_ALLOW',
  EQUALS = 'EQUALS',
  IS_DEFINED = 'IS_DEFINED',
  IS_EMPTY = 'IS_EMPTY',
  IS_IN = 'IS_IN',
  IS_NOT_EMPTY = 'IS_NOT_EMPTY',
  IS_NOT_IN = 'IS_NOT_IN',
  IS_OPTIONAL = 'IS_OPTIONAL',
  NOT_EQUALS = 'NOT_EQUALS',
  VALIDATE = 'VALIDATE',
  VALIDATE_BY = 'VALIDATE_BY',
  VALIDATE_IF = 'VALIDATE_IF',
  VALIDATE_NESTED = 'VALIDATE_NESTED',
  VALIDATE_PROMISE = 'VALIDATE_PROMISE',
  MAX_DATE = 'MAX_DATE',
  MIN_DATE = 'MIN_DATE',
  IS_DIVISIBLE_BY = 'IS_DIVISIBLE_BY',
  IS_NEGATIVE = 'IS_NEGATIVE',
  IS_POSITIVE = 'IS_POSITIVE',
  MAX = 'MAX',
  MIN = 'MIN',
  IS_INSTANCE = 'IS_INSTANCE',
  IS_NOT_EMPTY_OBJECT = 'IS_NOT_EMPTY_OBJECT',
  CONTAINS = 'CONTAINS',
  IS_ALPHA = 'IS_ALPHA',
  IS_ALPHA_NUMERIC = 'IS_ALPHA_NUMERIC',
  IS_ASCII = 'IS_ASCII',
  IS_BASE_32 = 'IS_BASE_32',
  IS_BASE_64 = 'IS_BASE_64',
  IS_BIC = 'IS_BIC',
  IS_BOOLEAN_STRING = 'IS_BOOLEAN_STRING',
  IS_BTC_ADDRESS = 'IS_BTC_ADDRESS',
  IS_BYTE_LENGTH = 'IS_BYTE_LENGTH',
  IS_CREDIT_CARD = 'IS_CREDIT_CARD',
  IS_DATA_URI = 'IS_DATA_URI',
  IS_CURRENCY = 'IS_CURRENCY',
  IS_DATE_STRING = 'IS_DATE_STRING',
  IS_DECIMAL = 'IS_DECIMAL',
  IS_EAN = 'IS_EAN',
  IS_EMAIL = 'IS_EMAIL',
  IS_FIREBASE_PUSH_ID = 'IS_FIREBASE_PUSH_ID',
  IS_FQDN = 'IS_FQDN',
  IS_FULL_WIDTH = 'IS_FULL_WIDTH',
  IS_HALF_WIDTH = 'IS_HALF_WIDTH',
  IS_HASH = 'IS_HASH',
  IS_HEXA_DECIMAL = 'IS_HEXA_DECIMAL',
  IS_HEX_COLOR = 'IS_HEX_COLOR',
  IS_HSL = 'IS_HSL',
  IS_IBAN = 'IS_IBAN',
  IS_IP = 'IS_IP',
  IS_ISBN = 'IS_ISBN',
  IS_ISIN = 'IS_ISIN',
  IS_JSON = 'IS_JSON',
  IS_JWT = 'IS_JWT',
  IS_LOCALE = 'IS_LOCALE',
  IS_LOWER_CASE = 'IS_LOWER_CASE',
  IS_MAGNET_URI = 'IS_MAGNET_URI',
  IS_MILITARY_TIME = 'IS_MILITARY_TIME',
  IS_MIME_TYPE = 'IS_MIME_TYPE',
  IS_MONGO_ID = 'IS_MONGO_ID',
  IS_MOBILE_PHONE = 'IS_MOBILE_PHONE',
  IS_MULTI_BYTE = 'IS_MULTI_BYTE',
  IS_NUMBER_STRING = 'IS_NUMBER_STRING',
  IS_OCTAL = 'IS_OCTAL',
  IS_PASSPORT_NUMBER = 'IS_PASSPORT_NUMBER',
  IS_PHONE_NUMBER = 'IS_PHONE_NUMBER',
  IS_PORT = 'IS_PORT',
  IS_POSTAL_CODE = 'IS_POSTAL_CODE',
  IS_RFC_3339 = 'IS_RFC_3339',
  IS_RGB_COLOR = 'IS_RGB_COLOR',
  IS_SEM_VER = 'IS_SEM_VER',
  IS_SURROGATE_PAIR = 'IS_SURROGATE_PAIR',
  IS_UPPER_CASE = 'IS_UPPER_CASE',
  IS_URL = 'IS_URL',
  IS_UUID = 'IS_UUID',
  IS_VARIABLE_WIDTH = 'IS_VARIABLE_WIDTH',
  LENGTH = 'LENGTH',
  MATCHES = 'MATCHES',
  MAX_LENGTH = 'MAX_LENGTH',
  MIN_LENGTH = 'MIN_LENGTH',
  NOT_CONTAINS = 'NOT_CONTAINS',
  IS_ETHEREUM_ADDRESS = 'IS_ETHEREUM_ADDRESS',
  IS_ARRAY = 'IS_ARRAY',
  IS_BOOLEAN = 'IS_BOOLEAN',
  IS_DATE = 'IS_DATE',
  IS_ENUM = 'IS_ENUM',
  IS_INT = 'IS_INT',
  IS_NUMBER = 'IS_NUMBER',
  IS_OBJECT = 'IS_OBJECT',
  IS_STRING = 'IS_STRING',
  INVALID_UUID = 'INVALID_UUID',
}

registerEnumType(ClassValidatorEnum, {
  name: 'ClassValidatorEnum',
});
